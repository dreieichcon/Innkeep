@using Innkeep.DI.Services
@using Innkeep.Core.Interfaces.Services
@using Innkeep.Server.Interfaces.Services
@using Innkeep.Client.Interfaces.Services
@inject IServerConnectionService ServerConnectionService
@inject IShoppingCartService ShoppingCartService;

<div class="cart-total-wrapper drop2">
   <div class="item-row">
      <div class="cart-total">
         Total
      </div>
      <div class="cart-total">
         @Total &nbsp;
         <div> @ServerConnectionService.CurrentEvent?.Currency</div>
      </div>
   </div>

   <div class="item-row">
      <div class="cart-tax">
         Tax:
      </div>
      <div class="cart-tax">
         @Tax &nbsp;
         <div> @ServerConnectionService.CurrentEvent?.Currency</div>
      </div>
   </div>
   <div class="item-row">
      <div class="cart-net">

      </div>
   </div>
</div>

@code {

   protected override void OnInitialized()
   {
      ShoppingCartService.CartUpdated += StateChangedEvent;
   }

   private void StateChangedEvent(object? sender, EventArgs e)
   {
      _ = InvokeAsync(StateHasChanged);
   }

   private decimal Total => ShoppingCartService.Cart.Sum(x => x.Price);

   private decimal Tax => ShoppingCartService.Cart.Sum(x => x.TaxPrice);
}