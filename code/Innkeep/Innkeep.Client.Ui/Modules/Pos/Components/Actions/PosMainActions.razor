@using Innkeep.Db.Client.Models
@using Innkeep.Services.Client.Interfaces.Hardware
@using Innkeep.Services.Client.Interfaces.Pos
@using Innkeep.Services.Interfaces
@inject IClientPosService ClientPosService;
@inject IDbService<ClientConfig> ClientConfigService;
@inject IPrinterService PrinterService;

<MudPaper Style="@PosStyles.DisplayStyleDouble" Class="d-flex flex-grow-1 mh-100 overflow-hidden" Elevation="0">
    <MudStack Row="true" Class="flex-grow-1">
        <MudButton
            Style="@PosStyles.DisplayStyle"
            Color="Color.Success"
            Variant="Variant.Filled"
            @onclick="@ClientPosService.InitiatePayment"
            Disabled="@(!ClientPosService.CartItems.Any())">
            <MudText Typo="Typo.h4">
                PAY
            </MudText>
        </MudButton>
        <MudButton
            Style="@PosStyles.DisplayStyle"
            Color="Color.Error"
            Variant="Variant.Filled"
            @onclick="@ClientPosService.ClearCart">
            <MudText Typo="Typo.h4">
                CLEAR CART
            </MudText>
        </MudButton>
        <MudButton
            Style="@PosStyles.DisplayStyle"
            Color="Color.Tertiary"
            Variant="Variant.Outlined"
            @onclick="PrintLast">
            <MudText Typo="Typo.h4">
                PRINT LAST
            </MudText>
        </MudButton>
    </MudStack>
</MudPaper>

@code {

    protected override void OnInitialized()
    {
        ClientPosService.CartUpdated += async (_, _) => await InvokeAsync(StateHasChanged);
    }

    private void PrintLast()
    {
        if (ClientPosService.LastReceipt is null)
        {
            return;
        }
        
        var printer = ClientConfigService.CurrentItem!.PrinterName;
        PrinterService.PrintReceipt(printer, ClientPosService.LastReceipt!);
    }

}