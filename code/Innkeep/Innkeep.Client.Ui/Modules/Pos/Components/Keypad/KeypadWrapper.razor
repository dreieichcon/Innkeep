@using Innkeep.Services.Client.Interfaces.Pos
@inject IClientPosService ClientPosService;

<MudStack Class="flex-grow-1" AlignItems="AlignItems.Center">
    <MudPaper Style="width: 84%; height: 10%" Class="m-2 my-6">
        <MudStack Class="w-100 h-100" Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudText Class="fw-bold px-3" Typo="Typo.h5">Amount:</MudText>
            <MudText Class="fw-bold px-3" Typo="Typo.h5" Color="AmountColor">@CurrentAmount </MudText>
        </MudStack>
    </MudPaper>
    <MudStack Style="@PosStyles.KeypadStyle" Justify="Justify.Center">
        <MudStack Row="true" Style="@PosStyles.KeypadRowStyle" Justify="Justify.Center">
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(7)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    7
                </MudText>
            </MudButton>
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(8)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    8
                </MudText>
            </MudButton>
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(9)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    9
                </MudText>
            </MudButton>
        </MudStack>
        <MudStack Row="true" Style="@PosStyles.KeypadRowStyle" Justify="Justify.Center">
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(4)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    4
                </MudText>
            </MudButton>
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(5)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    5
                </MudText>
            </MudButton>
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(6)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    6
                </MudText>
            </MudButton>
        </MudStack>
        <MudStack Row="true" Style="@PosStyles.KeypadRowStyle" Justify="Justify.Center">
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(1)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    1
                </MudText>
            </MudButton>
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(2)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    2
                </MudText>
            </MudButton>
            <MudButton
                Style="@PosStyles.KeypadButtonStyle"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(3)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    3
                </MudText>
            </MudButton>
        </MudStack>
        <MudStack Row="true" Style="@PosStyles.KeypadRowStyle" Justify="Justify.Center">
            <MudButton
                Style="width: 83%;"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                @onclick="() => SetAmount(0)">
                <MudText Typo="Typo.h4" Class="fw-bold">
                    0
                </MudText>
            </MudButton>
        </MudStack>
        <MudStack Row="true" Style="@PosStyles.KeypadRowStyle" Justify="Justify.Center">
            <MudButton
                Style="width: 39.5%"
                Variant="Variant.Filled"
                Color="Color.Success"
                @onclick="TransferAmount">
                SET
            </MudButton>
            <MudButton
                Style="width: 39.5%"
                Variant="Variant.Filled"
                Color="Color.Error"
                @onclick="ClearAmount">CLEAR</MudButton>
        </MudStack>
    </MudStack>
</MudStack>

@code {

    protected override void OnInitialized()
    {
        ClientPosService.CurrentAmountUpdated += async(_, _) => await GetAmountFromService();
    }

    private int CurrentAmount { get; set; } = 1;

    private bool _added;

    private bool IsSet => ClientPosService.CurrentAmount == CurrentAmount;

    private Color AmountColor => IsSet ? Color.Success : Color.Default;

    public void SetAmount(int amount)
    {
        if (!_added)
        {
            CurrentAmount = amount;
            _added = true;
            return;
        }

        try
        {
            CurrentAmount = int.Parse($"{CurrentAmount}{amount}");
        }
        catch
        {
            CurrentAmount = amount;
        }
    }

    public async Task TransferAmount()
    {
        ClientPosService.CurrentAmount = CurrentAmount;
        await InvokeAsync(StateHasChanged);
    }

    public async Task ClearAmount()
    {
        CurrentAmount = 1;
        _added = false;
        await TransferAmount();
    }

    private async Task GetAmountFromService()
    {
        CurrentAmount = ClientPosService.CurrentAmount;
        _added = false;
        await InvokeAsync(StateHasChanged);
    }

}