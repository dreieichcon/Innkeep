@using System.Globalization
@using Innkeep.Services.Client.Interfaces.Pos
@inject IClientPosService ClientPosService;

<MudPaper Style="@(IsDisplay ? PosStyles.Wider : PosStyles.DisplayStyle)" Class="border-1 mud-border-primary">
    <MudStack Class="h-100 p-3" Justify="Justify.Center" Spacing="1">
        <MudStack Class="flex-grow-1" Row="true" Justify="Justify.SpaceBetween">
            <MudText Typo="@(IsDisplay ? Typo.h3 : Typo.h4)" Class="fw-bold" Color="Color.Primary">@(IsDisplay ? "Gesamt" : "Total")</MudText>
            <MudText Typo="@(IsDisplay ? Typo.h3 : Typo.h4)" Class="fw-bold" Color="Color.Primary">@MoneyRequired @Currency</MudText>
        </MudStack>
        <MudStack Class="flex-grow-1" Row="true" Justify="Justify.SpaceBetween">
            <MudText Typo="@(IsDisplay ? Typo.h4 : Typo.h5)" Class="fw-bold">@(IsDisplay ? "Gegeben" : "Given")</MudText>
            <MudText Typo="@(IsDisplay ? Typo.h4 : Typo.h5)" Class="fw-bold">@MoneyGiven @Currency</MudText>
        </MudStack>
        <MudStack Class="flex-grow-1" Row="true" Justify="Justify.SpaceBetween">
            <MudText Typo="@(IsDisplay ? Typo.h3 : Typo.h4)" Class="fw-bold" Color="Color.Primary">@(IsDisplay ? "Verbleibend" : "Remaining")</MudText>
            <MudText Typo="@(IsDisplay ? Typo.h3 : Typo.h4)" Class="fw-bold" Color="Color.Primary">@MoneyRemaining @Currency</MudText>
        </MudStack>
    </MudStack>
</MudPaper>

@code {

    protected override void OnInitialized()
    {
        ClientPosService.MoneyUpdated += async (_, _) => await InvokeAsync(StateHasChanged);
    }

    private string MoneyRequired => ClientPosService.MoneyRequired.ToString("F2", CultureInfo.InvariantCulture);

    private string MoneyGiven => ClientPosService.MoneyGiven.ToString("F2", CultureInfo.InvariantCulture);

    private string MoneyRemaining => ClientPosService.MoneyRemaining.ToString("F2", CultureInfo.InvariantCulture);

    private string Currency => ClientPosService.CartItems.FirstOrDefault()?.Currency ?? "EUR";
    
    [Parameter]
    public bool IsDisplay { get; set; }
}