@using Innkeep.Db.Server.Models
@using Innkeep.Services.Interfaces
@using Innkeep.Services.Server.Interfaces.Fiskaly.Client
@using Innkeep.Services.Server.Interfaces.Fiskaly.Tss
@using Innkeep.Styles.Theme
@inherits LayoutComponentBase

<MudDialogProvider/>
<MudSnackbarProvider/>
<MudThemeProvider IsDarkMode="false" Theme="_theme"/>
<MudPopoverProvider/>

@inject IDbService<PretixConfig> PretixConfigService;
@inject IFiskalyTssService TssService;
@inject IFiskalyClientService ClientService;

<MudLayout>
    <MudAppBar Elevation="1" Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(e => DrawerToggle())"/>
        <MudText Typo="Typo.h5" Class="ml-3">Innkeep Server</MudText>
        <MudSpacer/>
        <MudStack Row="true">
            <MudText>Organizer: @PretixConfigService.CurrentItem?.SelectedOrganizerName</MudText>
            <MudText>Event: @PretixConfigService.CurrentItem?.SelectedEventName</MudText>
            <MudText>Tss: @TssService.CurrentTss?.Id - @TssService.CurrentTss?.Description</MudText>
            <MudText>Client: @ClientService.CurrentClient?.Id - @ClientService.CurrentClient?.SerialNumber</MudText>
        </MudStack>
        <MudSpacer/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent Class="d-flex">
        <MudPaper Elevation="0" Class="vh-100 vw-100 mw-100 mh-100 overflow-hidden">
            <div class="h-100 w-100 mw-100 mh-100 d-flex flex-column overflow-hidden">
                <div class="d-flex p-3 h-100 w-100 mw-100 mh-100 overflow-scroll">
                    @Body
                </div>
            </div>
        </MudPaper>
    </MudMainContent>
</MudLayout>

@code {

    private readonly MudTheme _theme = InnkeepThemeProvider.GetTheme();

    protected override async Task OnInitializedAsync()
    {
        await PretixConfigService.Load();
        await TssService.Load();
        await ClientService.Load();
        PretixConfigService.ItemsUpdated += async (_, _) => await InvokeAsync(StateHasChanged);
        TssService.ItemsUpdated += async (_, _) => await InvokeAsync(StateHasChanged);
        ClientService.ItemsUpdated += async (_, _) => await InvokeAsync(StateHasChanged);
    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

}