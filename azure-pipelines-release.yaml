# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - 'refs/heads/release'

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: CmdLine@2
  displayName: 'Install Velopack Tool'
  inputs:
    script: 'dotnet tool update -g vpk'

- task: DownloadSecureFile@1
  displayName: 'Download Env File'
  name: testsEnv
  inputs:
    secureFile: tests.env
  
- task: CopyFiles@2
  displayName: 'Copy Env File to Env Dir'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: 'tests.env'
    TargetFolder: '$(Build.SourcesDirectory)/code/Innkeep/Env'

- task: PowerShell@2
  displayName: 'Download latest client release'
  inputs:
    targetType: 'inline'
    script: |
      $outputdir = '$(Build.SourcesDirectory)/release/client/pack/'
      $url       = 'https://updates.conservices.de/innkeep/client/'

      New-Item -ItemType Directory -Force -Path $outputdir

      # enable TLS 1.2 and TLS 1.1 protocols
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12, [Net.SecurityProtocolType]::Tls11

      $WebResponse = Invoke-WebRequest -Uri $url
      # get the list of links, skip the first one ("../") and download the files
      $WebResponse.Links | Select-Object -ExpandProperty href | Where-Object { $_ -match "^[^\?^/].+$" } | ForEach-Object {
          Write-Host "Downloading file '$_'"
          $filePath = Join-Path -Path $outputdir -ChildPath $_
          $fileUrl  = '{0}/{1}' -f $url.TrimEnd('/'), $_
          Invoke-WebRequest -Uri $fileUrl -OutFile $filePath
      }

- task: PowerShell@2
  displayName: 'Download latest server release'
  inputs:
    targetType: 'inline'
    script: |
      $outputdir = '$(Build.SourcesDirectory)/release/server/pack/'
      $url       = 'https://updates.conservices.de/innkeep/server/'

      New-Item -ItemType Directory -Force -Path $outputdir

      # enable TLS 1.2 and TLS 1.1 protocols
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12, [Net.SecurityProtocolType]::Tls11

      $WebResponse = Invoke-WebRequest -Uri $url
      # get the list of links, skip the first one ("../") and download the files
      $WebResponse.Links | Select-Object -ExpandProperty href | Where-Object { $_ -match "^[^\?^/].+$" } | ForEach-Object {
          Write-Host "Downloading file '$_'"
          $filePath = Join-Path -Path $outputdir -ChildPath $_
          $fileUrl  = '{0}/{1}' -f $url.TrimEnd('/'), $_
          Invoke-WebRequest -Uri $fileUrl -OutFile $filePath
      }

- task: CmdLine@2
  displayName: 'Run NUKE Tool'
  inputs:
    script: '$(Build.SourcesDirectory)/code/Innkeep/build.cmd'

- task: CopyFiles@2
  inputs:
    displayName: 'Copy server pack to staging directory'
    SourceFolder: '$(Build.SourcesDirectory)/release/server/pack/'
    contents: '*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/server/pack'

- task: CopyFiles@2
  inputs:
    displayName: 'Copy client pack to staging directory'
    SourceFolder: '$(Build.SourcesDirectory)/release/client/pack/'
    contents: '*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/client/pack'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'Conservices Update Account'
    sourceFolder: '$(Build.ArtifactStagingDirectory)/server/pack'
    contents: '*'
    targetFolder: '/var/www/hosts/update/innkeep/server'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'Conservices Update Account'
    sourceFolder: '$(Build.ArtifactStagingDirectory)/client/pack'
    contents: '*'
    targetFolder: '/var/www/hosts/update/innkeep/client'